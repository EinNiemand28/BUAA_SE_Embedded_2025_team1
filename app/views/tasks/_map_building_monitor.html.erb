<% 
# 该局部视图用于显示建图任务的实时监控
# 参数：task - 当前建图任务
%>

<div class="rounded-lg overflow-hidden shadow bg-white" 
     data-controller="map-building"
     data-map-building-task-id-value="<%= @task.id %>"
     data-map-building-task-type-value="<%= @task.task_type %>"
     data-map-building-task-status-value="<%= @task.status %>"
     data-map-building-progress-details-value="<%= @task.progress_details.to_json %>">
  <div class="bg-blue-50 border-b border-blue-100 px-4 py-3 flex items-center justify-between">
    <h3 class="text-lg font-medium text-blue-900 flex items-center">
      <svg class="h-5 w-5 text-blue-600 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7" />
      </svg>
      <%= t('tasks.map_building.monitoring_title') %>
    </h3>
    <div class="flex items-center">
      <span id="map-building-status" data-map-building-target="status" class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
        <%= t('tasks.status_waiting') %>
      </span>
    </div>
  </div>
  
  <div class="p-4">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <!-- 左侧：地图预览区域 -->
      <div class="border rounded-lg overflow-hidden flex flex-col">
        <div class="bg-gray-50 px-4 py-2 border-b">
          <h4 class="font-medium text-sm text-gray-700 flex items-center">
            <svg class="h-4 w-4 text-gray-500 mr-1.5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z" />
            </svg>
            <%= t('tasks.map_building.preview_title') %>
          </h4>
        </div>
        <div class="flex-1 flex items-center justify-center p-4 bg-gray-100 relative" style="min-height: 300px;">
          <div id="map-preview-container" class="w-full h-full relative">
            <div id="map-preview-placeholder" data-map-building-target="mapPreviewPlaceholder" class="absolute inset-0 flex items-center justify-center text-gray-400 text-center">
              <%= t('tasks.map_building.waiting_for_preview') %>
            </div>
            <img id="map-preview-image" data-map-building-target="mapPreviewImage" src="" class="hidden max-w-full max-h-full mx-auto object-contain" alt="Map Preview">
            <div id="robot-position-marker" data-map-building-target="robotPositionMarker" class="hidden absolute h-4 w-4 bg-red-600 rounded-full transform -translate-x-1/2 -translate-y-1/2" style="box-shadow: 0 0 0 2px white; z-index: 10;"></div>
          </div>
        </div>
      </div>
      
      <!-- 右侧：状态和控制区域 -->
      <div class="border rounded-lg overflow-hidden">
        <div class="bg-gray-50 px-4 py-2 border-b">
          <h4 class="font-medium text-sm text-gray-700 flex items-center">
            <svg class="h-4 w-4 text-gray-500 mr-1.5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
            <%= t('tasks.map_building.status_title') %>
          </h4>
        </div>
        <div class="p-4 space-y-4">
          <!-- 进度条 -->
          <div>
            <div class="flex items-center justify-between text-sm mb-1">
              <span class="font-medium text-gray-700"><%= t('tasks.map_building.progress') %></span>
              <span id="progress-percentage" data-map-building-target="progressPercentage" class="text-gray-500">0%</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2.5">
              <div id="progress-bar" data-map-building-target="progressBar" class="bg-blue-600 h-2.5 rounded-full" style="width: 0%"></div>
            </div>
          </div>
          
          <!-- 状态信息 -->
          <div>
            <h5 class="text-sm font-medium text-gray-700 mb-2"><%= t('tasks.map_building.status_info') %></h5>
            <div id="status-message-container" class="bg-gray-50 rounded-md p-3 max-h-32 overflow-y-auto text-sm">
              <p id="status-message" data-map-building-target="statusMessage" class="text-gray-600">
                <%= t('tasks.map_building.waiting_to_start') %>
              </p>
            </div>
          </div>
          
          <!-- 控制按钮 -->
          <div class="pt-4 flex justify-between">
            <div>
              <span class="inline-flex rounded-md shadow-sm">
                <button id="stop-mapping-btn" 
                        data-map-building-target="stopButton"
                        data-action="click->map-building#stopMapping"
                        type="button" 
                        class="inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500" 
                        disabled>
                  <svg class="h-4 w-4 mr-1.5 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                  </svg>
                  <%= t('tasks.map_building.stop_mapping') %>
                </button>
              </span>
            </div>
            
            <div>
              <span class="inline-flex rounded-md shadow-sm">
                <button id="emergency-stop-btn" 
                        data-action="click->map-building#emergencyStop"
                        type="button" 
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                  <svg class="h-4 w-4 mr-1.5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <%= t('tasks.map_building.emergency_stop') %>
                </button>
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- 构建信息 -->
    <div class="mt-6 border rounded-lg overflow-hidden">
      <div class="bg-gray-50 px-4 py-2 border-b">
        <h4 class="font-medium text-sm text-gray-700 flex items-center">
          <svg class="h-4 w-4 text-gray-500 mr-1.5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <%= t('tasks.map_building.details_title') %>
        </h4>
      </div>
      <div class="p-4 grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
        <div>
          <div class="text-gray-500"><%= t('tasks.map_building.task_id') %>:</div>
          <div class="font-medium"><%= @task.id %></div>
        </div>
        <div>
          <div class="text-gray-500"><%= t('tasks.map_building.map_name') %>:</div>
          <div class="font-medium">
            <% if @task.progress_details.present? && JSON.parse(@task.progress_details)['map_name'].present? %>
              <%= JSON.parse(@task.progress_details)['map_name'] %>
            <% else %>
              <%= t('common.not_available') %>
            <% end %>
          </div>
        </div>
        <div>
          <div class="text-gray-500"><%= t('tasks.map_building.started_at') %>:</div>
          <div class="font-medium"><%= l(@task.started_at, format: :long) if @task.started_at %></div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('turbo:load', function() {
    // 如果不是在任务详情页面，或者不是建图任务，则不执行
    if (!window.currentTaskId || window.currentTaskType !== 'map_build_auto') return;
    
    const statusElement = document.getElementById('map-building-status');
    const progressBar = document.getElementById('progress-bar');
    const progressPercentage = document.getElementById('progress-percentage');
    const statusMessage = document.getElementById('status-message');
    const stopMappingBtn = document.getElementById('stop-mapping-btn');
    const emergencyStopBtn = document.getElementById('emergency-stop-btn');
    const mapPreviewImage = document.getElementById('map-preview-image');
    const mapPreviewPlaceholder = document.getElementById('map-preview-placeholder');
    const robotPositionMarker = document.getElementById('robot-position-marker');
    
    let latestMapPreview = null;
    
    // 更新状态显示
    function updateStatus(status) {
      let statusText = '';
      let statusClass = '';
      
      switch(status) {
        case 'pending':
          statusText = '<%= t('activerecord.enums.task.status.pending') %>';
          statusClass = 'bg-yellow-100 text-yellow-800';
          break;
        case 'processing':
          statusText = '<%= t('activerecord.enums.task.status.processing') %>';
          statusClass = 'bg-blue-100 text-blue-800';
          stopMappingBtn.disabled = false;
          break;
        case 'completed':
          statusText = '<%= t('activerecord.enums.task.status.completed') %>';
          statusClass = 'bg-green-100 text-green-800';
          stopMappingBtn.disabled = true;
          break;
        case 'failed':
          statusText = '<%= t('activerecord.enums.task.status.failed') %>';
          statusClass = 'bg-red-100 text-red-800';
          stopMappingBtn.disabled = true;
          break;
        case 'cancelled':
          statusText = '<%= t('activerecord.enums.task.status.cancelled') %>';
          statusClass = 'bg-gray-100 text-gray-800';
          stopMappingBtn.disabled = true;
          break;
        case 'cancelling':
          statusText = '<%= t('activerecord.enums.task.status.cancelling') %>';
          statusClass = 'bg-orange-100 text-orange-800';
          stopMappingBtn.disabled = true;
          break;
        default:
          statusText = status;
          statusClass = 'bg-gray-100 text-gray-800';
      }
      
      statusElement.textContent = statusText;
      statusElement.className = `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusClass}`;
    }
    
    // 更新进度显示
    function updateProgress(percentage, message) {
      if (percentage !== null && percentage !== undefined) {
        const progress = Math.max(0, Math.min(100, percentage));
        progressBar.style.width = `${progress}%`;
        progressPercentage.textContent = `${progress}%`;
      }
      
      if (message) {
        statusMessage.textContent = message;
      }
    }
    
    // 更新地图预览
    function updateMapPreview(imageData) {
      if (!imageData) return;
      
      mapPreviewImage.src = `data:image/png;base64,${imageData}`;
      mapPreviewImage.classList.remove('hidden');
      mapPreviewPlaceholder.classList.add('hidden');
      latestMapPreview = imageData;
    }
    
    // 更新机器人位置
    function updateRobotPosition(x, y) {
      if (x === undefined || y === undefined) return;
      
      // 假设地图图像坐标和机器人实际位置之间有映射关系
      // 这里需要根据实际情况调整计算方式
      const containerRect = mapPreviewImage.getBoundingClientRect();
      const containerWidth = containerRect.width;
      const containerHeight = containerRect.height;
      
      // 简单示例：假设x, y是0-100的百分比坐标
      const posX = (x / 100) * containerWidth;
      const posY = (y / 100) * containerHeight;
      
      robotPositionMarker.style.left = `${posX}px`;
      robotPositionMarker.style.top = `${posY}px`;
      robotPositionMarker.classList.remove('hidden');
    }
    
    // 停止建图按钮
    stopMappingBtn.addEventListener('click', function() {
      if (confirm('<%= t('tasks.map_building.confirm_stop') %>')) {
        // 使用Rails路由发送取消任务请求
        fetch(`/tasks/${window.currentTaskId}/cancel`, {
          method: 'POST',
          headers: {
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
            'Content-Type': 'application/json',
          },
          credentials: 'same-origin'
        })
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            updateStatus('cancelling');
            updateProgress(null, '<%= t('tasks.map_building.stopping') %>');
          } else {
            console.error('Failed to stop mapping task:', data);
            alert('<%= t('tasks.map_building.stop_failed') %>');
          }
        })
        .catch(error => {
          console.error('Error stopping mapping task:', error);
          alert('<%= t('tasks.map_building.stop_failed') %>');
        });
      }
    });
    
    // 急停按钮
    emergencyStopBtn.addEventListener('click', function() {
      if (confirm('<%= t('tasks.map_building.confirm_emergency') %>')) {
        // 发送急停命令到ROS
        // 使用Robot Control Channel发送急停命令
        fetch('/robots/update_status', {
          method: 'POST',
          headers: {
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ command: 'emergency_stop' }),
          credentials: 'same-origin'
        })
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            alert('<%= t('tasks.map_building.emergency_sent') %>');
          } else {
            alert('<%= t('tasks.map_building.emergency_failed') %>');
          }
        })
        .catch(error => {
          console.error('Error sending emergency stop:', error);
          alert('<%= t('tasks.map_building.emergency_failed') %>');
        });
      }
    });
    
    // 处理来自WebSocket的任务更新
    document.addEventListener('task:statusUpdated', function(e) {
      const data = e.detail;
      if (data.task_id !== window.currentTaskId) return;
      
      updateStatus(data.status);
    });
    
    document.addEventListener('task:progressUpdated', function(e) {
      const data = e.detail;
      if (data.task_id !== window.currentTaskId) return;
      
      // 解析进度详情
      if (data.progress_details?.updates?.length > 0) {
        const latestUpdate = data.progress_details.updates[data.progress_details.updates.length - 1];
        updateProgress(latestUpdate.progress_percentage, latestUpdate.message);
      }
    });
    
    // 通过Action Cable接收地图预览更新
    document.addEventListener('robot_feedback:map_preview', function(e) {
      const data = e.detail;
      if (data.task_id !== window.currentTaskId) return;
      
      updateMapPreview(data.map_image_data_base64);
    });
    
    document.addEventListener('robot_feedback:robot_state', function(e) {
      const data = e.detail;
      
      if (data.pose && latestMapPreview) {
        updateRobotPosition(data.pose.x, data.pose.y);
      }
    });
    
    // 初始化状态显示
    updateStatus('<%= @task.status %>');
    
    // 如果任务有进度数据，则显示
    <% if @task.progress_details.present? %>
      try {
        const progressDetails = <%= raw @task.progress_details.to_json %>;
        if (progressDetails.updates && progressDetails.updates.length > 0) {
          const latestUpdate = progressDetails.updates[progressDetails.updates.length - 1];
          updateProgress(latestUpdate.progress_percentage, latestUpdate.message);
        }
        
        // 如果有地图预览，则显示
        if (progressDetails.map_preview && progressDetails.map_preview.image_data_base64) {
          updateMapPreview(progressDetails.map_preview.image_data_base64);
        }
      } catch (e) {
        console.error('Error parsing progress details:', e);
      }
    <% end %>
  });
</script> 